kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    autoscaling.knative.dev/target: '100'
    autoscaling.knative.dev/targetUtilizationPercentage: '70'
    autoscaling.knative.dev/window: 60s
    deployment.kubernetes.io/revision: '1'
    serving.knative.dev/creator: gratinierer
  resourceVersion: '1337884429'
  name: python-serverless-git-00001-deployment-helm
  uid: 2507094c-2b01-4542-aadc-de0f96d6d3b8
  creationTimestamp: '2023-09-27T08:23:03Z'
  generation: 2
  ownerReferences:
    - apiVersion: serving.knative.dev/v1
      kind: Revision
      name: python-serverless-git-00001
      uid: e97503bc-4b73-4099-abc4-389868d60abe
      controller: true
      blockOwnerDeletion: true
  labels:
    {{- include "goedel-db-connector.labels" . | nindent 4 }}
spec:
  replicas: 0
  selector:
    matchLabels:
      serving.knative.dev/revisionUID: e97503bc-4b73-4099-abc4-389868d60abe
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "goedel-db-connector.labels" . | nindent 8 }}      
      annotations:
        autoscaling.knative.dev/target: '100'
        autoscaling.knative.dev/targetUtilizationPercentage: '70'
        autoscaling.knative.dev/window: 60s
    spec:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              httpGet:
                path: /wait-for-drain
                port: 8022
                scheme: HTTP
          name: python-serverless-git
          env:
            - name: PORT
              value: '8080'
            - name: K_REVISION
              value: python-serverless-git-00001
            - name: K_CONFIGURATION
              value: python-serverless-git
            - name: K_SERVICE
              value: python-serverless-git
          ports:
            - name: user-port
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: FallbackToLogsOnError
          image: image-registry.openshift-image-registry.svc:5000/gratinierer-dev/python-serverless-git@sha256:6e2b7c78243439577d683467ff9560a523148c65df39def3d594d6f1f699d7ea
        - resources:
            requests:
              cpu: 25m
          readinessProbe:
            httpGet:
              path: /
              port: 8012
              scheme: HTTP
              httpHeaders:
                - name: K-Network-Probe
                  value: queue
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: queue-proxy
          env:
            - name: SERVING_NAMESPACE
              value: gratinierer-dev
            - name: SERVING_SERVICE
              value: python-serverless-git
            - name: SERVING_CONFIGURATION
              value: python-serverless-git
            - name: SERVING_REVISION
              value: python-serverless-git-00001
            - name: QUEUE_SERVING_PORT
              value: '8012'
            - name: QUEUE_SERVING_TLS_PORT
              value: '8112'
            - name: CONTAINER_CONCURRENCY
              value: '0'
            - name: REVISION_TIMEOUT_SECONDS
              value: '300'
            - name: REVISION_RESPONSE_START_TIMEOUT_SECONDS
              value: '0'
            - name: REVISION_IDLE_TIMEOUT_SECONDS
              value: '0'
            - name: SERVING_POD
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SERVING_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SERVING_LOGGING_CONFIG
            - name: SERVING_LOGGING_LEVEL
            - name: SERVING_ENABLE_REQUEST_LOG
              value: 'false'
            - name: SERVING_REQUEST_METRICS_BACKEND
              value: prometheus
            - name: TRACING_CONFIG_BACKEND
              value: none
            - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
            - name: TRACING_CONFIG_DEBUG
              value: 'false'
            - name: TRACING_CONFIG_SAMPLE_RATE
              value: '0.1'
            - name: USER_PORT
              value: '8080'
            - name: SYSTEM_NAMESPACE
              value: knative-serving
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
            - name: SERVING_READINESS_PROBE
              value: >-
                {"tcpSocket":{"port":8080,"host":"127.0.0.1"},"successThreshold":1}
            - name: ENABLE_PROFILING
              value: 'true'
            - name: SERVING_ENABLE_PROBE_REQUEST_LOG
              value: 'false'
            - name: METRICS_COLLECTOR_ADDRESS
            - name: CONCURRENCY_STATE_ENDPOINT
            - name: CONCURRENCY_STATE_TOKEN_PATH
              value: /var/run/secrets/tokens/state-token
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: ENABLE_HTTP2_AUTO_DETECTION
              value: 'false'
            - name: ROOT_CA
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          ports:
            - name: http-queueadm
              containerPort: 8022
              protocol: TCP
            - name: http-autometric
              containerPort: 9090
              protocol: TCP
            - name: http-usermetric
              containerPort: 9091
              protocol: TCP
            - name: profiling-port
              containerPort: 8008
              protocol: TCP
            - name: queue-port
              containerPort: 8012
              protocol: TCP
            - name: https-port
              containerPort: 8112
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: image-registry.openshift-image-registry.svc:5000/gratinierer-dev/python-serverless-git@sha256:6e2b7c78243439577d683467ff9560a523148c65df39def3d594d6f1f699d7ea
      restartPolicy: Always
      terminationGracePeriodSeconds: 300
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      enableServiceLinks: false
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600